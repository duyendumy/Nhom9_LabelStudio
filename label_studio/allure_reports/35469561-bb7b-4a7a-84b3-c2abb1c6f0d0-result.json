{"name": "test_open_cloud_storage", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.NoSuchWindowException: Message: no such window: target window already closed\nfrom unknown error: web view not found\n  (Session info: chrome=113.0.5672.127)\nStacktrace:\nBacktrace:\n\tGetHandleVerifier [0x00BB8893+48451]\n\t(No symbol) [0x00B4B8A1]\n\t(No symbol) [0x00A55058]\n\t(No symbol) [0x00A3D073]\n\t(No symbol) [0x00A9DEBB]\n\t(No symbol) [0x00AABFD3]\n\t(No symbol) [0x00A9A0B6]\n\t(No symbol) [0x00A77E08]\n\t(No symbol) [0x00A78F2D]\n\tGetHandleVerifier [0x00E18E3A+2540266]\n\tGetHandleVerifier [0x00E58959+2801161]\n\tGetHandleVerifier [0x00E5295C+2776588]\n\tGetHandleVerifier [0x00C42280+612144]\n\t(No symbol) [0x00B54F6C]\n\t(No symbol) [0x00B511D8]\n\t(No symbol) [0x00B512BB]\n\t(No symbol) [0x00B44857]\n\tBaseThreadInitThunk [0x75F78744+36]\n\tRtlGetAppContainerNamedObjectPath [0x76FF587D+253]\n\tRtlGetAppContainerNamedObjectPath [0x76FF584D+205]", "trace": "self = <test_cloudstorage.TestCloudStorage object at 0x000001BF3DA53C70>, test_setup = None\n\n    @allure.description(\"Open Cloud Storage Of Project\")\n    @allure.severity(severity_level = \"CRITICAL\")\n    def test_open_cloud_storage(self, test_setup):\n        email_data = \"labelstudio09@gmail.com\"\n        password_data = \"1234asdfASDF\"\n        with allure.step(\"Sign in Label Studio\"):\n            email = driver.find_element(By.ID,'email')\n            email.send_keys(email_data)\n            password = driver.find_element(By.ID,'password')\n            password.send_keys(password_data)\n            login_button = driver.find_element(By.CLASS_NAME,'ls-button_look_primary')\n            login_button.click()\n>       list_project = driver.find_elements(By.CLASS_NAME, \"ls-projects-page__link\")\n\ntest_selenium\\test_cloudstorage.py:37: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nC:\\Users\\Dung DeLL 7537\\AppData\\Roaming\\Python\\Python310\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:861: in find_elements\n    return self.execute(Command.FIND_ELEMENTS, {\"using\": by, \"value\": value})[\"value\"] or []\nC:\\Users\\Dung DeLL 7537\\AppData\\Roaming\\Python\\Python310\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:440: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x000001BF3DA93820>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such window\",\"message\":\"no such window: target window already closed\\\\...\\n\\\\tRtlGetAppContainerNamedObjectPath [0x76FF587D+253]\\\\n\\\\tRtlGetAppContainerNamedObjectPath [0x76FF584D+205]\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        if status in ErrorCode.NO_SUCH_ELEMENT:\n            exception_class = NoSuchElementException\n        elif status in ErrorCode.NO_SUCH_FRAME:\n            exception_class = NoSuchFrameException\n        elif status in ErrorCode.NO_SUCH_SHADOW_ROOT:\n            exception_class = NoSuchShadowRootException\n        elif status in ErrorCode.NO_SUCH_WINDOW:\n            exception_class = NoSuchWindowException\n        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:\n            exception_class = StaleElementReferenceException\n        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:\n            exception_class = ElementNotVisibleException\n        elif status in ErrorCode.INVALID_ELEMENT_STATE:\n            exception_class = InvalidElementStateException\n        elif (\n            status in ErrorCode.INVALID_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER\n        ):\n            exception_class = InvalidSelectorException\n        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:\n            exception_class = ElementNotSelectableException\n        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:\n            exception_class = ElementNotInteractableException\n        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:\n            exception_class = InvalidCookieDomainException\n        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:\n            exception_class = UnableToSetCookieException\n        elif status in ErrorCode.TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.SCRIPT_TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.UNKNOWN_ERROR:\n            exception_class = WebDriverException\n        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:\n            exception_class = UnexpectedAlertPresentException\n        elif status in ErrorCode.NO_ALERT_OPEN:\n            exception_class = NoAlertPresentException\n        elif status in ErrorCode.IME_NOT_AVAILABLE:\n            exception_class = ImeNotAvailableException\n        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:\n            exception_class = ImeActivationFailedException\n        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:\n            exception_class = MoveTargetOutOfBoundsException\n        elif status in ErrorCode.JAVASCRIPT_ERROR:\n            exception_class = JavascriptException\n        elif status in ErrorCode.SESSION_NOT_CREATED:\n            exception_class = SessionNotCreatedException\n        elif status in ErrorCode.INVALID_ARGUMENT:\n            exception_class = InvalidArgumentException\n        elif status in ErrorCode.NO_SUCH_COOKIE:\n            exception_class = NoSuchCookieException\n        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:\n            exception_class = ScreenshotException\n        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:\n            exception_class = ElementClickInterceptedException\n        elif status in ErrorCode.INSECURE_CERTIFICATE:\n            exception_class = InsecureCertificateException\n        elif status in ErrorCode.INVALID_COORDINATES:\n            exception_class = InvalidCoordinatesException\n        elif status in ErrorCode.INVALID_SESSION_ID:\n            exception_class = InvalidSessionIdException\n        elif status in ErrorCode.UNKNOWN_METHOD:\n            exception_class = UnknownMethodException\n        else:\n            exception_class = WebDriverException\n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchWindowException: Message: no such window: target window already closed\nE       from unknown error: web view not found\nE         (Session info: chrome=113.0.5672.127)\nE       Stacktrace:\nE       Backtrace:\nE       \tGetHandleVerifier [0x00BB8893+48451]\nE       \t(No symbol) [0x00B4B8A1]\nE       \t(No symbol) [0x00A55058]\nE       \t(No symbol) [0x00A3D073]\nE       \t(No symbol) [0x00A9DEBB]\nE       \t(No symbol) [0x00AABFD3]\nE       \t(No symbol) [0x00A9A0B6]\nE       \t(No symbol) [0x00A77E08]\nE       \t(No symbol) [0x00A78F2D]\nE       \tGetHandleVerifier [0x00E18E3A+2540266]\nE       \tGetHandleVerifier [0x00E58959+2801161]\nE       \tGetHandleVerifier [0x00E5295C+2776588]\nE       \tGetHandleVerifier [0x00C42280+612144]\nE       \t(No symbol) [0x00B54F6C]\nE       \t(No symbol) [0x00B511D8]\nE       \t(No symbol) [0x00B512BB]\nE       \t(No symbol) [0x00B44857]\nE       \tBaseThreadInitThunk [0x75F78744+36]\nE       \tRtlGetAppContainerNamedObjectPath [0x76FF587D+253]\nE       \tRtlGetAppContainerNamedObjectPath [0x76FF584D+205]\n\nC:\\Users\\Dung DeLL 7537\\AppData\\Roaming\\Python\\Python310\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:245: NoSuchWindowException"}, "description": "Open Cloud Storage Of Project", "steps": [{"name": "Sign in Label Studio", "status": "passed", "start": 1684924870973, "stop": 1684924872455}], "start": 1684924870973, "stop": 1684924872471, "uuid": "378ed7bb-94dc-4e86-8148-9ba15ee04b87", "historyId": "5f06648f2e529a188fde6826796b3e46", "testCaseId": "1e7d2a0b98367ced77cfaafb16fa9748", "fullName": "test_selenium.test_cloudstorage.TestCloudStorage#test_open_cloud_storage", "labels": [{"name": "severity", "value": "CRITICAL"}, {"name": "parentSuite", "value": "test_selenium"}, {"name": "suite", "value": "test_cloudstorage"}, {"name": "subSuite", "value": "TestCloudStorage"}, {"name": "host", "value": "DESKTOP-GUK9NB5"}, {"name": "thread", "value": "15012-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_selenium.test_cloudstorage"}]}